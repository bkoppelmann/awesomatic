@p typesetter = texinfo
@p maximum_input_line_length = infinity
@! $Id: Sp_Separator.fw,v 1.3 1997/08/29 12:08:20 mjung Exp $
@!
@! (C) Copyright 1997 University of Paderborn.
@! 
@! This file is part of the Eli Module Library.
@! 
@! The Eli Module Library is free software; you can redistribute it and/or
@! modify it under the terms of the GNU Library General Public License as
@! published by the Free Software Foundation; either version 2 of the
@! License, or (at your option) any later version.
@! 
@! The Eli Module Library is distributed in the hope that it will be
@! useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
@! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
@! Library General Public License for more details.
@! 
@! You should have received a copy of the GNU Library General Public
@! License along with the Eli Module Library; see the file COPYING.LIB.
@! If not, write to the Free Software Foundation, Inc., 59 Temple Place -
@! Suite 330, Boston, MA 02111-1307, USA. 
@!

@A@<Separate With Single Spaces@>

The @{Sep_Print@} function given here uses single spaces regardless of
context.

@O@<Sp_Separator.c@>==@{
#include <stdio.h>
#include "eliproto.h"
#include "Separator.h"

void
#ifdef PROTO_OK
Sep_Print(PtgFilePtr file, const char *last, const char *next)
#else
Sep_Print(file, last, next)
PtgFilePtr file;
char *last, *next;
#endif
{ fputc(' ', SEP_OUTPUT_FILE(file)); }
@}

@{Sep_Print@} is invoked by the @{Separator@} function, so the
@{Separator@} module is required.

@O@<Sp_Separator.specs@>==@{
$/Output/Separator.fw
@}
