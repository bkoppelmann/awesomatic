Name, NodeName : int;
Next, Prev, Parent, FirstChild : DefTableKey;

$LIBRARY

/* $Id: weaveinfo.pdl,v 1.3 1997/08/30 17:57:46 waite Exp $ */
/* Library operation declarations */
/* Copyright (c) 1992-1997, The Regents of the University of Colorado */

/* This file is part of the Eli translator construction system.

Eli is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

Eli is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with Eli; see the file COPYING.  If not, write to the Free Software
Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

TYPE Get(DefTableKey key, TYPE deflt)
{ if (key == NoKey) return deflt;
  if (PRESENT) return VALUE;
  else return deflt;
}

void Set(DefTableKey key, TYPE add, TYPE replace)
{ if (key == NoKey) return;
  if (ACCESS) VALUE = replace;
  else VALUE = add;
}

void Reset(DefTableKey key, TYPE val)
{ if (key == NoKey) return;
  ACCESS; VALUE = val;
}

void Is(DefTableKey key, TYPE which, TYPE error)
{ if (key == NoKey) return;
  if (!ACCESS) VALUE = which;
  else if (VALUE != which) VALUE = error;
}

void Unique(DefTableKey key, TYPE next())
{ if (key == NoKey) return;
  if (!ACCESS) VALUE = next();
}
