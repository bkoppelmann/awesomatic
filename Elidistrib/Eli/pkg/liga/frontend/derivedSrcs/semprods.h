switch( action ) {
	case (OFFSET+1) : _nst[_nsp]=Mkrule_64(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+2) : _incrnodestack();_nst[_nsp]=Mkrule_65(&curpos); break;
	case (OFFSET+3) : _nst[_nsp]=Mkrule_66(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+4) : _nsp -= 1;_nst[_nsp]=Mkrule_67(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+5) : _nst[_nsp]=Mkrule_49(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+6) : _incrnodestack();_nst[_nsp]=Mkrule_2(&curpos); break;
	case (OFFSET+7) : _incrnodestack();_nst[_nsp]=Mkrule_1(&curpos); break;
	case (OFFSET+8) : _nst[_nsp]=Mkrule_46(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+9) : _nsp -= 1;_nst[_nsp]=Mkrule_26(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+10) : _nsp -= 2;_nst[_nsp]=Mkrule_3(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+11) : _nsp -= 1;_nst[_nsp]=Mkrule_68(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+12) : _nsp -= 2;_nst[_nsp]=Mkrule_43(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+13) : _incrnodestack();_nst[_nsp]=Mkrule_69(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+14) : _nst[_nsp]=Mkrule_70(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+15) : _nsp -= 1;_nst[_nsp]=Mkrule_71(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+16) : _nst[_nsp]=Mkrule_72(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+17) : _nsp -= 1;_nst[_nsp]=Mkrule_73(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+18) : _incrnodestack();_nst[_nsp]=Mkrule_74(&curpos); break;
	case (OFFSET+19) : _nst[_nsp]=Mkrule_75(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+20) : _incrnodestack();_nst[_nsp]=Mkrule_76(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+21) : _nst[_nsp]=Mkrule_77(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+22) : _nsp -= 1;_nst[_nsp]=Mkrule_78(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+23) : _nsp -= 2;_nst[_nsp]=Mkrule_39(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+24) : _nsp -= 1;_nst[_nsp]=Mkrule_47(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+25) : _incrnodestack();_nst[_nsp]=Mkrule_45(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+26) : _incrnodestack();_nst[_nsp]=Mkrule_79(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+27) : _nst[_nsp]=Mkrule_80(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+28) : _nsp -= 1;_nst[_nsp]=Mkrule_81(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+29) : _nsp -= 1;_nst[_nsp]=Mkrule_38(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+30) : _incrnodestack();_nst[_nsp]=Mkrule_40(&curpos); break;
	case (OFFSET+31) : _incrnodestack();_nst[_nsp]=Mkrule_41(&curpos); break;
	case (OFFSET+32) : _incrnodestack();_nst[_nsp]=Mkrule_42(&curpos); break;
	case (OFFSET+33) : _incrnodestack();_nst[_nsp]=Mkrule_82(&curpos); break;
	case (OFFSET+34) : _nst[_nsp]=Mkrule_83(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+35) : _nst[_nsp]=Mkrule_84(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+36) : _nst[_nsp]=Mkrule_24(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+37) : _incrnodestack();_nst[_nsp]=Mkrule_85(&curpos); break;
	case (OFFSET+38) : _nsp -= 1;_nst[_nsp]=Mkrule_86(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+39) : _nst[_nsp]=Mkrule_27(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+40) : _nst[_nsp]=Mkrule_25(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+41) : _nst[_nsp]=Mkrule_31(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+42) : _nst[_nsp]=Mkrule_87(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+43) : _nst[_nsp]=Mkrule_88(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+44) : _nst[_nsp]=Mkrule_89(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+45) : _nst[_nsp]=Mkrule_90(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+46) : _nsp -= 1;_nst[_nsp]=Mkrule_91(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+47) : _nst[_nsp]=Mkrule_92(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+48) : _nst[_nsp]=Mkrule_93(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+49) : _nst[_nsp]=Mkrule_94(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+50) : _nst[_nsp]=Mkrule_95(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+51) : _incrnodestack();_nst[_nsp]=Mkrule_16(&curpos); break;
	case (OFFSET+52) : _nst[_nsp]=Mkrule_17(&curpos, _nst[_nsp+0], MkIdentifier(&(T_POS(TokenStack(4))), T_ATTR(TokenStack(4))), MkIdentifier(&(T_POS(TokenStack(6))), T_ATTR(TokenStack(6))), MkIdentifier(&(T_POS(TokenStack(8))), T_ATTR(TokenStack(8)))); break;
	case (OFFSET+53) : _nst[_nsp]=Mkrule_12(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+54) : _incrnodestack();_nst[_nsp]=Mkrule_6(&curpos, MkC_Float(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+55) : _incrnodestack();_nst[_nsp]=Mkrule_5(&curpos, MkC_Integer(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+56) : _incrnodestack();_nst[_nsp]=Mkrule_7(&curpos, MkC_String(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+57) : _nst[_nsp]=Mkrule_15(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+58) : _nsp -= 1;_nst[_nsp]=Mkrule_14(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+59) : _nst[_nsp]=Mkrule_13(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))), _nst[_nsp+0]); break;
	case (OFFSET+60) : _incrnodestack();_nst[_nsp]=Mkrule_8(&curpos, MkP_String(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+61) : _nst[_nsp]=Mkrule_10(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+62) : _nst[_nsp]=Mkrule_11(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+63) : _nst[_nsp]=Mkrule_9(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+64) : _nsp -= 1;_nst[_nsp]=Mkrule_96(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+65) : _nst[_nsp]=Mkrule_97(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+66) : _incrnodestack();_nst[_nsp]=Mkrule_29(&curpos); break;
	case (OFFSET+67) : _incrnodestack();_nst[_nsp]=Mkrule_30(&curpos, MkC_Integer(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1)))); break;
	case (OFFSET+68) : _incrnodestack();_nst[_nsp]=Mkrule_98(&curpos); break;
	case (OFFSET+69) : _nst[_nsp]=Mkrule_99(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+70) : _nst[_nsp]=Mkrule_100(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+71) : _nsp -= 1;_nst[_nsp]=Mkrule_101(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+72) : _nst[_nsp]=Mkrule_50(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+73) : _nsp -= 2;_nst[_nsp]=Mkrule_44(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+74) : _nst[_nsp]=Mkrule_102(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+75) : _incrnodestack();_nst[_nsp]=Mkrule_103(&curpos); break;
	case (OFFSET+76) : _nst[_nsp]=Mkrule_104(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+77) : _nst[_nsp]=Mkrule_105(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+78) : _nsp -= 1;_nst[_nsp]=Mkrule_106(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+79) : _nst[_nsp]=Mkrule_107(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+80) : _nst[_nsp]=Mkrule_108(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+81) : _nsp -= 1;_nst[_nsp]=Mkrule_51(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+82) : _nsp -= 1;_nst[_nsp]=Mkrule_52(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+83) : _nst[_nsp]=Mkrule_109(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+84) : _nsp -= 1;_nst[_nsp]=Mkrule_110(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+85) : _nsp -= 1;_nst[_nsp]=Mkrule_48(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+86) : _nst[_nsp]=Mkrule_111(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+87) : _nst[_nsp]=Mkrule_112(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+88) : _nst[_nsp]=Mkrule_21(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+89) : _nsp -= 2;_nst[_nsp]=Mkrule_19(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+90) : _nsp -= 3;_nst[_nsp]=Mkrule_20(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2], _nst[_nsp+3]); break;
	case (OFFSET+91) : _incrnodestack();_nst[_nsp]=Mkrule_4(&curpos, MkIdentifier(&(T_POS(TokenStack(2))), T_ATTR(TokenStack(2)))); break;
	case (OFFSET+92) : _incrnodestack();_nst[_nsp]=Mkrule_113(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+93) : _incrnodestack();_nst[_nsp]=Mkrule_53(&curpos); break;
	case (OFFSET+94) : _nst[_nsp]=Mkrule_54(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+95) : scan_p_strings(); break;
	case (OFFSET+96) : scan_c_chars(); break;
	case (OFFSET+97) : _nsp -= 2;_nst[_nsp]=Mkrule_55(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+98) : _incrnodestack();_nst[_nsp]=Mkrule_23(&curpos); break;
	case (OFFSET+99) : _incrnodestack();_nst[_nsp]=Mkrule_114(&curpos); break;
	case (OFFSET+100) : _nst[_nsp]=Mkrule_115(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+101) : _nst[_nsp]=Mkrule_116(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+102) : _nst[_nsp]=Mkrule_22(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+103) : _nst[_nsp]=Mkrule_117(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+104) : _nsp -= 1;_nst[_nsp]=Mkrule_118(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+105) : _nst[_nsp]=Mkrule_28(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+106) : _nst[_nsp]=Mkrule_119(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+107) : _nst[_nsp]=Mkrule_120(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+108) : _nst[_nsp]=Mkrule_121(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+109) : _incrnodestack();_nst[_nsp]=Mkrule_122(&curpos); break;
	case (OFFSET+110) : _nsp -= 1;_nst[_nsp]=Mkrule_123(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+111) : _nst[_nsp]=Mkrule_124(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+112) : _nst[_nsp]=Mkrule_125(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+113) : _nst[_nsp]=Mkrule_126(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+114) : _incrnodestack();_nst[_nsp]=Mkrule_127(&curpos); break;
	case (OFFSET+115) : _nst[_nsp]=Mkrule_18(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+116) : _nsp -= 2;_nst[_nsp]=Mkrule_60(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+117) : _incrnodestack();_nst[_nsp]=Mkrule_128(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+118) : _nst[_nsp]=Mkrule_129(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+119) : _incrnodestack();_nst[_nsp]=Mkrule_130(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+120) : _nsp -= 1;_nst[_nsp]=Mkrule_63(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+121) : _nst[_nsp]=Mkrule_32(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+122) : _incrnodestack();_nst[_nsp]=Mkrule_61(&curpos); break;
	case (OFFSET+123) : _incrnodestack();_nst[_nsp]=Mkrule_131(&curpos); break;
	case (OFFSET+124) : _incrnodestack();_nst[_nsp]=Mkrule_62(&curpos); break;
	case (OFFSET+125) : _nsp -= 3;_nst[_nsp]=Mkrule_59(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2], _nst[_nsp+3]); break;
	case (OFFSET+126) : _incrnodestack();_nst[_nsp]=Mkrule_35(&curpos); break;
	case (OFFSET+127) : _incrnodestack();_nst[_nsp]=Mkrule_36(&curpos); break;
	case (OFFSET+128) : _nsp -= 1;_nst[_nsp]=Mkrule_33(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+129) : _incrnodestack();_nst[_nsp]=Mkrule_37(&curpos); break;
	case (OFFSET+130) : _incrnodestack();_nst[_nsp]=Mkrule_34(&curpos); break;
	case (OFFSET+131) : _incrnodestack();_nst[_nsp]=Mkrule_132(&curpos); break;
	case (OFFSET+132) : _incrnodestack();_nst[_nsp]=Mkrule_133(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+133) : _incrnodestack();_nst[_nsp]=Mkrule_57(&curpos, MkP_String(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+134) : _incrnodestack();_nst[_nsp]=Mkrule_134(&curpos); break;
	case (OFFSET+135) : _nsp -= 1;_nst[_nsp]=Mkrule_135(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+136) : _nst[_nsp]=Mkrule_56(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+137) : _nst[_nsp]=Mkrule_136(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+138) : _nst[_nsp]=Mkrule_137(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+139) : _nsp -= 1;_nst[_nsp]=Mkrule_58(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+140) : _incrnodestack();_nst[_nsp]=Mkrule_138(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
}
