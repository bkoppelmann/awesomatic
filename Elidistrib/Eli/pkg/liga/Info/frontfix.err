# $Id: frontfix.err,v 1.3 1997/08/29 13:58:49 mjung Exp $
#
# error message patterns that cannot be derived from the liga frontend
# specifications

# (C) Copyright 1997 University of Paderborn
#
# This file is part of the Eli translator construction system.
# 
# Eli is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any later
# version.
# 
# Eli is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
# 
# You should have received a copy of the GNU General Public License along
# with Eli; see the file COPYING.  If not, write to the Free Software
# Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  

/RULE .*: root of subtree no .*/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)system./
	p
	d
}
/AddIdn: Too many identifiers/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/DefineIdn: Too many identifiers/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/KeyInEnv: Too many identifiers/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/NextInhKey: Too many identifiers/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/Memory overflow in mkidn/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/Negative length in mkidn/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)system./
	p
	d
}
/envmod: malloc failed/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/NewKey: malloc failure/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/NewStkElt: malloc failed/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/find: malloc failure/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}

/Wrong parse tables/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)system./
	p
	d
}
/Parse stack overflow/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)system./
	p
	d
}
/Accept not expected/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)system./
	p
	d
}

/multi-line string too long/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/No mem for auxCString/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}

/auxCString + c_mkstr must be used as a pair/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)system./
	p
	d
}

/malloc fail: CaseTbl0/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/malloc fail: fallback/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}
/out of mem for multi-line string/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (help)limits./
	p
	d
}

s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./

