\input texinfo    @c -*-texinfo-*-
@comment %**start of header (This is for running Texinfo on a region.)
@comment 
@comment (C) Copyright 1997 University of Paderborn
@comment 
@comment This file is part of the Eli translator construction system.
@comment 
@comment Eli is free software; you can redistribute it and/or modify it under
@comment the terms of the GNU General Public License as published by the Free
@comment Software Foundation; either version 2, or (at your option) any later
@comment version.
@comment 
@comment Eli is distributed in the hope that it will be useful, but WITHOUT ANY
@comment WARRANTY; without even the implied warranty of MERCHANTABILITY or
@comment FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
@comment for more details.
@comment 
@comment You should have received a copy of the GNU General Public License along
@comment with Eli; see the file COPYING.  If not, write to the Free Software
@comment Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
@comment 

@setfilename show
@setchapternewpage odd
@settitle SHOW - Displays the internal representation of a LIDO grammar.
@comment %**end of header (This is for running Texinfo on a region.)
@comment $Id: show.tnf,v 4.3 2000/07/07 14:04:23 mjung Exp $

@titlepage
@sp 2
@center @titlefont{SHOW - Debugging Information for LIDO}
@sp 4
@center Uwe Kastens
@sp 2
@center University of Paderborn
@center D-4790 Paderborn
@center F.R.G
@sp 8
@center $Revision: 4.3 $
@end titlepage
 
@iftex 
@finalout
@end iftex
@node top, , , (dir)    
@comment  node-name,  next,  previous,  up
@ifinfo
@chapter SHOW - A LIDO Table Viewer
@end ifinfo

The LIGA module "show" translates internal representations
of LIDO text into readable text. The text contains information
about the symbols, attributes, computations and visit-sequences
of the LIDO text. This information helps the user to learn what 
is LIGA's view of the given LIDO text, especially for tracing errors.

The show module can be applied to the output (*_idl) of any LIGA phase.
In Eli it is activated by the derivations
@comment :showFe, :showExp, :showOrd, :showRepl, :showOptim
@example
:showFe:viewlist, :showMe:viewlist
@end example
These requests start a shell in a directory, containing three
generated files:

@table @code
@item symbols.info
contains a @samp{TERM} and a @samp{NONTERM} specification
mentioning all grammar symbols of the AG.

It helps to find symbols which are not intended
to be terminals.

@item attrs.info
contains the attribute specifications for
each symbol. Type and class are given for
each attribute, additionally its visit number,
the storage decision, and the origin of the
attribute - if that information exists.

This information is helpful to get an overview
about the attributes and their properties, and to
find attributes which have a misspelled name.
 
@item visit.info
contains the visit-sequence for each production.
It is just the set of operations if the input
to show was not processed by order.
@end table
Both files @samp{symbols.info} & @samp{attrs.info} are LIDO text 
which might be added to a LIDO file.

All source code references contained in the files have the
form @code{(Fi:line:col)}
where @code{Fi} is a reference to the original source file name listed
in the header of the file.

@bye






