@=~
~p typesetter = texinfo
~p maximum_input_line_length = infinity
~! $Id: Kind.fw,v 3.7 1997/08/29 12:08:20 mjung Exp $
~!
~! (C) Copyright 1997 University of Paderborn.
~! 
~! This file is part of the Eli Module Library.
~! 
~! The Eli Module Library is free software; you can redistribute it and/or
~! modify it under the terms of the GNU Library General Public License as
~! published by the Free Software Foundation; either version 2 of the
~! License, or (at your option) any later version.
~! 
~! The Eli Module Library is distributed in the hope that it will be
~! useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
~! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
~! Library General Public License for more details.
~! 
~! You should have received a copy of the GNU Library General Public
~! License along with the Eli Module Library; see the file COPYING.LIB.
~! If not, write to the Free Software Foundation, Inc., 59 Temple Place -
~! Suite 330, Boston, MA 02111-1307, USA. 
~!

This module associates an int encoded property |NAME|Kind to object keys.
If different values are associated to a key the property is turned
into IntMultiple (= 0). The value IntNone (= -1) indicates that
the property is not set at all. Other int values may be chosen to 
represent the property values.

The module provides computations for the CLASS SYMBOLs

|NAME|RangeKind
	a range that contains occurrences of |NAME|SetKind or
	|NAME|GetKind CLASS SYMBOLs.
	|NAME|RangeKind is inherited to the grammar root by default.

|NAME|SetKind
	a context that sets the property |NAME|Kind given by
	|NAME|SetKind.|NAME|Kind.

|NAME|GetKind
	a context that acesses property value finally
	associated to |NAME|GetKind.|KEY|Key. It may be obtained
	by the attribute |NAME|GetKind.Has|NAME|Kind, e.g. used
	to issue messages.

|NAME|SetKind and |NAME|GetKind may be INHERITed to the same grammar CLASS SYMBOLs.

~O~<|NAME|Kind.pdl~>~{
|NAME|Kind:	int [SetDiff];
~}

~O~<|NAME|Kind.lido~>~{
CLASS SYMBOL ROOTCLASS INHERITS |NAME|RangeKind END;

/* for compatibility with old versions: */
CLASS SYMBOL |NAME|RootKind INHERITS |NAME|RangeKind END;

CLASS SYMBOL |NAME|RangeKind:
		Got|NAME|Kind:	VOID	SYNT;

CLASS SYMBOL |NAME|SetKind:
		|KEY|Key:	DefTableKey,
		|NAME|Kind:	int,
		Got|NAME|Kind:	VOID	SYNT;

CLASS SYMBOL |NAME|GetKind:
		|KEY|Key:	DefTableKey,
		Has|NAME|Kind:	int;

CLASS SYMBOL |NAME|RangeKind COMPUTE
  SYNT.Got|NAME|Kind = CONSTITUENTS |NAME|SetKind.Got|NAME|Kind
			SHIELD |NAME|RangeKind;
END;

CLASS SYMBOL |NAME|SetKind COMPUTE
  SYNT.Got|NAME|Kind =
	SetDiff|NAME|Kind (THIS.|KEY|Key, THIS.|NAME|Kind, IntMultiple);
END;

CLASS SYMBOL |NAME|GetKind COMPUTE
  SYNT.Has|NAME|Kind =
	Get|NAME|Kind (THIS.|KEY|Key, IntNone)
	DEPENDS_ON INCLUDING |NAME|RangeKind.Got|NAME|Kind;
END;
~}

~O~<|NAME|Kind.specs~>~{
$/Prop/PropLib.fw
~}

~O~<|NAME|Kind.reqmod~>~{
$/Prop/KindBad.h
~}

~O~<|NAME|Kind.head~>~{
#include "KindBad.h"
~}
