switch( action ) {
	case (OFFSET+1) : _incrnodestack();_nst[_nsp]=Mkrule_31(&curpos); break;
	case (OFFSET+2) : _nsp -= 2;_nst[_nsp]=Mkrule_9(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+3) : _nst[_nsp]=Mkrule_32(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+4) : _incrnodestack();_nst[_nsp]=Mkrule_33(&curpos); break;
	case (OFFSET+5) : _incrnodestack();_nst[_nsp]=Mkrule_34(&curpos); break;
	case (OFFSET+6) : _incrnodestack();_nst[_nsp]=Mkrule_15(&curpos); break;
	case (OFFSET+7) : _nst[_nsp]=Mkrule_16(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+8) : _nst[_nsp]=Mkrule_35(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+9) : _nst[_nsp]=Mkrule_5(&curpos, _nst[_nsp+0], MkCARDINAL(&(T_POS(TokenStack(2))), T_ATTR(TokenStack(2)))); break;
	case (OFFSET+10) : _incrnodestack();_nst[_nsp]=Mkrule_19(&curpos); break;
	case (OFFSET+11) : _nst[_nsp]=Mkrule_20(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+12) : _incrnodestack();_nst[_nsp]=Mkrule_36(&curpos, MkSTRING(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1)))); break;
	case (OFFSET+13) : _incrnodestack();_nst[_nsp]=Mkrule_37(&curpos); break;
	case (OFFSET+14) : _incrnodestack();_nst[_nsp]=Mkrule_38(&curpos); break;
	case (OFFSET+15) : _nsp -= 1;_nst[_nsp]=Mkrule_8(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+16) : _nst[_nsp]=Mkrule_39(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+17) : _nst[_nsp]=Mkrule_22(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+18) : _nst[_nsp]=Mkrule_40(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+19) : _nst[_nsp]=Mkrule_2(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+20) : _nsp -= 2;_nst[_nsp]=Mkrule_41(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+21) : _incrnodestack();_nst[_nsp]=Mkrule_42(&curpos); break;
	case (OFFSET+22) : _nsp -= 1;_nst[_nsp]=Mkrule_43(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+23) : _incrnodestack();_nst[_nsp]=Mkrule_44(&curpos); break;
	case (OFFSET+24) : _nsp -= 1;_nst[_nsp]=Mkrule_45(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+25) : _incrnodestack();_nst[_nsp]=Mkrule_46(&curpos); break;
	case (OFFSET+26) : _nsp -= 1;_nst[_nsp]=Mkrule_47(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+27) : _incrnodestack();_nst[_nsp]=Mkrule_48(&curpos); break;
	case (OFFSET+28) : _nsp -= 1;_nst[_nsp]=Mkrule_49(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+29) : _nsp -= 1;_nst[_nsp]=Mkrule_50(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+30) : _nsp -= 1;_nst[_nsp]=Mkrule_51(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+31) : _incrnodestack();_nst[_nsp]=Mkrule_29(&curpos, MkNAME(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+32) : _nsp -= 2;_nst[_nsp]=Mkrule_30(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+33) : _nsp -= 1;_nst[_nsp]=Mkrule_52(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+34) : _incrnodestack();_nst[_nsp]=Mkrule_53(&curpos, MkSTRING(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+35) : _nsp -= 1;_nst[_nsp]=Mkrule_4(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+36) : _incrnodestack();_nst[_nsp]=MkRmod_op1(&curpos); break;
	case (OFFSET+37) : _incrnodestack();_nst[_nsp]=Mkrule_12(&curpos); break;
	case (OFFSET+38) : _incrnodestack();_nst[_nsp]=Mkrule_54(&curpos, MkNAME(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+39) : _incrnodestack();_nst[_nsp]=Mkrule_55(&curpos, MkNAME(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+40) : _nst[_nsp]=Mkrule_21(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+41) : _nsp -= 3;_nst[_nsp]=Mkrule_56(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2], _nst[_nsp+3]); break;
	case (OFFSET+42) : _incrnodestack();_nst[_nsp]=Mkrule_6(&curpos); break;
	case (OFFSET+43) : _incrnodestack();_nst[_nsp]=Mkrule_7(&curpos); break;
	case (OFFSET+44) : _nsp -= 2;_nst[_nsp]=Mkrule_10(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+45) : _nsp -= 1;_nst[_nsp]=Mkrule_57(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+46) : _nst[_nsp]=Mkrule_58(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+47) : _incrnodestack();_nst[_nsp]=Mkrule_27(&curpos, MkNAME(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0)))); break;
	case (OFFSET+48) : _nsp -= 2;_nst[_nsp]=Mkrule_11(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]); break;
	case (OFFSET+49) : _nsp -= 3;_nst[_nsp]=Mkrule_28(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2], _nst[_nsp+3]); break;
	case (OFFSET+50) : _incrnodestack();_nst[_nsp]=Mkrule_17(&curpos); break;
	case (OFFSET+51) : _nst[_nsp]=Mkrule_18(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+52) : _incrnodestack();_nst[_nsp]=Mkrule_59(&curpos); break;
	case (OFFSET+53) : _incrnodestack();_nst[_nsp]=Mkrule_60(&curpos); break;
	case (OFFSET+54) : _incrnodestack();_nst[_nsp]=Mkrule_13(&curpos); break;
	case (OFFSET+55) : _nst[_nsp]=Mkrule_14(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+56) : _incrnodestack();_nst[_nsp]=Mkrule_23(&curpos); break;
	case (OFFSET+57) : _nsp -= 1;_nst[_nsp]=Mkrule_1(&curpos, _nst[_nsp+0], _nst[_nsp+1]); break;
	case (OFFSET+58) : _incrnodestack();_nst[_nsp]=Mkrule_61(&curpos); break;
	case (OFFSET+59) : _incrnodestack();_nst[_nsp]=Mkrule_62(&curpos); break;
	case (OFFSET+60) : _nst[_nsp]=Mkrule_26(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+61) : _nst[_nsp]=Mkrule_63(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+62) : _nst[_nsp]=Mkrule_3(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+63) : _nst[_nsp]=Mkrule_64(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+64) : _nst[_nsp]=Mkrule_65(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+65) : _nst[_nsp]=Mkrule_24(&curpos, _nst[_nsp+0]); break;
	case (OFFSET+66) : _nst[_nsp]=Mkrule_25(&curpos, _nst[_nsp+0]); break;
}
