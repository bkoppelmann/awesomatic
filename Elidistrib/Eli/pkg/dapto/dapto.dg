# $Id: dapto.dg,v 2.19 2013/08/31 01:44:47 profw Exp $
# Copyright 1994, The Regents of the University of Colorado
# Copyright 1995-1999, Anthony M. Sloane

# This file is part of the Eli translator construction system.

# Eli is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any later
# version.

# Eli is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.

# You should have received a copy of the GNU General Public License along
# with Eli; see the file COPYING.  If not, write to the Free Software
# Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

+monitor 'Flag to request generation of executable that can be monitored'?
    => :first;

*.dapto => :dapto;

:dapto 'Specification of events and messages for monitoring'? => :FILE;

:dapto.cmpd 'Set of Dapto specifications' => :LIST;

COLLECT (:dapto)
  => (:one.dapto.cmpd);

:one.dapto.cmpd 'Singleton Dapto specification' => :dapto.cmpd;

COLLECT (:LIST :extract=:dapto)
  => (:ext.dapto.cmpd);

:ext.dapto.cmpd 'Extracted Dapto specification fragments' => :dapto.cmpd;

EXEC (dapGen.sh) (:dapto.cmpd :cpp) (:dapto.cmpd :labels)
     (dapto.exe) (dapto.err) ($ODINCACHE/PKGS/skeleton/sed.exe)
  => (:dapGen);

:dapGen 'Objects generated from Dapto specifications' => :DERIVED-DIRECTORY;

EXEC (dapOut.sh) (:dapto.cmpd :map=:dapGen :ls) (+monitor)
     (dapto.reqmod) (dapto.dapto :dapGen)@
     NEEDS (dapto.c) (dapto.h)
  => (:dapOut);

:dapOut 'Support for execution monitoring' => :FILE;

EXEC (init.sh) (:used_sources) (:used_sources :list :labels)
     (+debug) (+prof) (+monitor)
  NEEDS (:used_sources :list) ($ODINCACHE/PKGS/skeleton/sed.exe)
  => (:init_sources) (:init_objects) (:libDb);

:init_sources 'Source files for initialization' => :DERIVED-DIRECTORY;
:init_objects 'Object files for initialization' => :DERIVED-DIRECTORY;
:libDb 'Event database for library modules' => :FILE;

EXEC ($ODINCACHE/PKGS/skeleton/no_map.sh) (+hookvalue) (:dapGen) dapGenErr
  => (:dapGenErr);

:dapGenErr 'Identity map for errors in standard form' => :line_err;

COLLECT (:level_8_specs +incl=(:etaIncl) :dapOut :list)
  => (:eli*level_9_specs_in);
