# $Id: oil.err,v 1.4 1994/02/25 23:30:36 kadhim Exp $
/Multiply defined name/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Recursive Type definition prohibited/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/not a valid type\/set identifier/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Only simple types allowed in enumeration/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Type required/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Only Operator allowed/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Parameter Sets not allowed/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Undefined operator/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Not an operator/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Max number of strings exceeded/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/String table overflow/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/Failure storing string/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/In CaseTbl, char [^(]*([^)]*) is not a token/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/Parse stack overflow/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/Syntax error/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (oil)example./
	p
	d
}
/Parsing resumed here/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/No source file specified/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
/Too many ERRORs + FATALs/{
	s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
	p
	d
}
s/^\([^ ]* [0-9]* [0-9]*\)/\1 : (nodoc)./
